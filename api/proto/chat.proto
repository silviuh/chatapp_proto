syntax = "proto3";

package chat;
option go_package = "/gen";

// The chat service definition.
service ChatService {
  // Sends a message to a chat room
  rpc SendMessage (SendMessageRequest) returns (SendMessageResponse) {}

  // User registration
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse) {}

  // User authentication
  rpc AuthenticateUser (AuthenticateUserRequest) returns (AuthenticateUserResponse) {}

  rpc GetUserDetails (GetUserDetailsRequest) returns (GetUserDetailsResponse) {}

  rpc LogoutUser (LogoutUserRequest) returns (LogoutUserResponse) {}
}

message RegisterUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterUserResponse {
  bool success = 1;
}

// Definition for user authentication
message AuthenticateUserRequest {
  string username = 1;
  string password = 2;
}

message AuthenticateUserResponse {
  bool success = 1;
}


message SendMessageRequest {
  string user = 1;
  string message = 2;
}

message SendMessageResponse {
  bool success = 1;
}

message GetUserDetailsRequest {
  string email = 1;
}

message GetUserDetailsResponse {
  bool isOnline = 1;
}

message LogoutUserRequest {
  string email = 1;
}

message LogoutUserResponse {
  bool success = 1;
}